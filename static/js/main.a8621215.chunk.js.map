{"version":3,"sources":["Components/NavBar/NavBar.js","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","className","type","data-toggle","data-target","aria-expanded","name","href","id","Component","Loading","App","Home","Loadable","loader","loading","Contact","Portfolio","AboutMe","basename","exact","path","component","this","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oRACaA,G,MAAb,uKAEE,OACC,yBAAKC,UAAU,yBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,iBACf,4BAAQC,KAAK,SAASD,UAAU,0BAA0BE,cAAY,WAAWC,cAAY,gCAAgCC,gBAAc,SAC3I,0BAAMJ,UAAU,WAAhB,qBACA,0BAAMA,UAAU,aAChB,0BAAMK,KAAK,aACX,0BAAML,UAAU,cAEhB,uBAAGA,UAAU,sBAAsBM,KAAK,sBAAxC,qBAGA,yBAAKN,UAAU,2BAA2BO,GAAG,gCAC7C,wBAAIP,UAAU,mBAEd,0BAAMA,UAAU,4BAGhB,wBAAIA,UAAU,8BACd,4BAAI,uBAAGM,KAAK,MAAR,SACJ,4BAAI,uBAAGA,KAAK,aAAR,aACJ,4BAAI,uBAAGA,KAAK,eAAR,cACJ,4BAAI,uBAAGA,KAAK,aAAR,oBAzBP,GAA4BE,c,+BCQtBC,EAAU,kBAAM,4CAmDPC,E,4MA/CdC,KAAOC,IAAS,CACfC,OAAQ,kBAAM,8BACdC,QAASL,I,EAEVM,QAAUH,IAAS,CAClBC,OAAQ,kBAAM,8BACdC,QAASL,I,EAEVO,UAAYJ,IAAS,CACpBC,OAAQ,kBAAM,8BACdC,QAASL,I,EAEVQ,QAAUL,IAAS,CAClBC,OAAQ,kBAAM,oDACdC,QAASL,I,uDAIT,OACC,yBAAKT,UAAU,OACf,kBAAC,EAAD,MACA,8BACA,yBAAKA,UAAU,aACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,uBACf,kBAAC,IAAD,CAAQkB,SAAS,KACjB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,KAAKX,OACtC,kBAAC,IAAD,CAAOS,KAAK,WAAWC,UAAWC,KAAKP,UACvC,kBAAC,IAAD,CAAOK,KAAK,aAAaC,UAAWC,KAAKN,YACzC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWC,KAAKL,aAKvC,yBAAKjB,UAAU,qB,GAvCAQ,aCDZe,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEN5B,EAwCX,SAAiCO,GAE/BwB,MAAMxB,GACHI,MAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEAzDAoB,CAAwBjC,GAHxBD,EAAgBC,OC7BxBkC,K","file":"static/js/main.a8621215.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport class NavBar extends Component{\r\n\trender(){\r\n\t\treturn(\t\t\t\r\n\t\t\t<nav className=\"navbar navbar-default\">\r\n\t\t\t<div className=\"container-fluid\"> \r\n\t\t\t<div className=\"navbar-header\">\r\n\t\t\t<button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n\t\t\t<span className=\"sr-only\">Toggle navigation</span>\r\n\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t<span name=\"icon-bar\"></span>\r\n\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t</button>\r\n\t\t\t<a className=\"navbar-brand center\" href=\"/Personal-web-site\">Vorobyev Vitaliy</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n\t\t\t<ul className=\"nav navbar-nav\">\r\n\t\t\t</ul>\r\n\t\t\t<form className=\"navbar-form navbar-left\">\r\n\r\n\t\t\t</form>\r\n\t\t\t<ul className=\"nav navbar-nav navbar-left\">\r\n\t\t\t<li><a href=\"./\">Home</a></li>\r\n\t\t\t<li><a href=\"./aboutme\">About me</a></li>\r\n\t\t\t<li><a href=\"./portfolio\">Portfolio</a></li>\r\n\t\t\t<li><a href=\"./contact\">Contact</a></li>\r\n\r\n\t\t\t</ul>\r\n\t\t\t</div> \r\n\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t\t)\r\n\t};\r\n\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {NavBar} from \"./Components/NavBar/NavBar\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\n\r\n//routing\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nclass App extends Component {\r\n\r\n\tHome = Loadable({\r\n\t\tloader: () => import('./routes/Home'),\r\n\t\tloading: Loading\r\n\t});\r\n\tContact = Loadable({\r\n\t\tloader: () => import('./routes/Contact'),\r\n\t\tloading: Loading\r\n\t});\r\n\tPortfolio = Loadable({\r\n\t\tloader: () => import('./routes/Portfolio'),\r\n\t\tloading: Loading\r\n\t});\r\n\tAboutMe = Loadable({\r\n\t\tloader: () => import('./routes/AboutMe'),\r\n\t\tloading: Loading\r\n\t});\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t<NavBar></NavBar>\r\n\t\t\t<main>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\"></div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-1\"></div>\r\n\t\t\t<div className=\"col-sm-12 col-md-10\">\r\n\t\t\t<Router basename=\"/\">\r\n\t\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\" component={this.Home}/>\r\n\t\t\t<Route path=\"/contact\" component={this.Contact}/>\r\n\t\t\t<Route path=\"/portfolio\" component={this.Portfolio}/>\r\n\t\t\t<Route path=\"/aboutme\" component={this.AboutMe}/>\r\n\r\n\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-1\"></div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n\t\t\t</div>\t \r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}